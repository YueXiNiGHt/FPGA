#include <stdio.h>
#include <stdint.h>
#include <unistd.h>  // For sleep() or usleep()

// 假设 PWM 配置寄存器
#define PWM_REG_BASE   0x40000000  // 假设PWM控制寄存器的基地址
#define PWM_PERIOD_REG (PWM_REG_BASE + 0x00)  // PWM周期寄存器
#define PWM_DUTY_REG   (PWM_REG_BASE + 0x04)  // PWM占空比寄存器

// 假设系统时钟为 50MHz
#define SYS_CLOCK 50000000
#define PWM_FREQUENCY 50  // 50Hz PWM信号，周期 20ms

// 计算周期和占空比
#define PWM_PERIOD   (SYS_CLOCK / PWM_FREQUENCY)  // 50Hz 时钟周期

// 设置 PWM 占空比控制舵机
void set_pwm_duty_cycle(unsigned int duty_cycle) {
    // 设置PWM周期
    *((volatile uint32_t*)PWM_PERIOD_REG) = PWM_PERIOD;

    // 设置PWM占空比 (duty_cycle: 0-100)
    uint32_t duty_ticks = (PWM_PERIOD * duty_cycle) / 100;
    *((volatile uint32_t *)PWM_DUTY_REG) = duty_ticks;
}

// 设置舵机的角度
void set_servo_angle(uint32_t angle) {
    // 舵机角度 0° 对应 1ms 占空比，180° 对应 2ms 占空比
    // 假设PWM周期为 20ms (50Hz)，占空比范围 5% 到 10%。
    if (angle < 0) angle = 0;
    if (angle > 180) angle = 180;

    // 将角度映射到占空比，0° -> 5% ，180° -> 10%
    uint32_t duty_cycle = (angle * 5 / 180) + 5;

    set_pwm_duty_cycle(duty_cycle);
}

int main() {
    // 初始化PWM硬件配置（此处假设硬件初始化已完成）

    // 设置舵机到 0° 位置
    printf("Setting servo to 0°\n");
    set_servo_angle(0);
    usleep(1000000);  // 延时1秒

    // 设置舵机到 90° 位置
    printf("Setting servo to 90°\n");
    set_servo_angle(90);
    usleep(1000000);  // 延时1秒

    // 设置舵机到 180° 位置
    printf("Setting servo to 180°\n");
    set_servo_angle(180);
    usleep(1000000);  // 延时1秒

    return 0;
}
